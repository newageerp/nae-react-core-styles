@import "bootstrap/mixins/text-truncate";
@import "bootstrap/variables";
@import "bootstrap/mixins/breakpoints";
@import "colors";
// Alignment
.text-justify {
  text-align: justify !important;
}

.text-wrap {
  white-space: normal !important;
}

.text-nowrap {
  white-space: nowrap !important;
}

.text-truncate {
  @include text-truncate();
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Transformation
.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

.text-decoration-none { text-decoration: none !important; }

.text-break {
  word-break: break-word !important; // Deprecated, but avoids issues with flex containers
  word-wrap: break-word !important; // Used instead of `overflow-wrap` for IE & Edge Legacy
}


// Contextual colors
.text-white { color: $whiteColor !important; }

//@each $color, $value in $theme-colors {
//  @include text-emphasis-variant(".text-#{$color}", $value, true);
//}

@each $color, $value in $theme-colors {
  .text-#{$color} {
    color: $value !important;
  }
}
